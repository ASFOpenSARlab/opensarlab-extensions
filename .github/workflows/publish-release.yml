---
name: "Step 2: Publish Release"
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      environment:
        description: "GitHub environment to use for secrets and variables"
        default: "test"
        required: true
      branch:
        description: "The target branch"
        required: false
      release_url:
        description: "The URL of the draft GitHub release"
        required: false
      steps_to_skip:
        description: "Comma separated list of steps to skip"
        required: false

jobs:
  publish_release:
    runs-on: ubuntu-latest
    environment:  ${{ github.event.inputs.environment }}
    # permissions:
      # # This is useful if you want to use PyPI trusted publisher
      # # and NPM provenance
      # id-token: write # Removed since not using NPM
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Populate Release
        id: populate-release
        uses: jupyter-server/jupyter_releaser/.github/actions/populate-release@v2
        with:
          token: ${{ secrets.PUBLISH_GITHUB_PAT }}
          branch: ${{ github.event.inputs.branch }}
          # release_url: ${{ github.event.inputs.release_url }}
          steps_to_skip: ${{ github.event.inputs.steps_to_skip }}

      - name: Get Twine URL
        # Only attempt exporting to prod if environment is prod
        id: get-twine-url
        run: |
          if [${{ github.event.inputs.environment == 'prod' }}]; then
            echo "TWINE_REPOSITORY_URL=https://pypi.org/legacy/" >> $GITHUB_ENV
          else
            echo "TWINE_REPOSITORY_URL=https://test.pypi.org/legacy/" >> $GITHUB_ENV
          fi


      - name: Finalize Release
        id: finalize-release
        env:
          # The following are needed if you use legacy PyPI set up
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          # PYPI_TOKEN_MAP: ${{ secrets.PYPI_TOKEN_MAP }}
          TWINE_USERNAME: __token__
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TWINE_REPOSITORY_URL: $TWINE_REPOSITORY_URL
        uses: jupyter-server/jupyter-releaser/.github/actions/finalize-release@v2
        with:
          token: ${{ secrets.PUBLISH_GITHUB_PAT }}
          # release_url: ${{ steps.populate-release.outputs.release_url }}

      - name: "** Next Step **"
        if: ${{ success() }}
        run: |
          echo "Verify the final release"
          # echo ${{ steps.finalize-release.outputs.release_url }}

      - name: "** Failure Message **"
        if: ${{ failure() }}
        run: |-
          echo "Failed to Publish the Draft Release Url:"
          # echo ${{ steps.populate-release.outputs.release_url }}
