---
name: Build

on:  # yamllint disable-line rule:truthy
  push:
    branches: main
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      EXTENSION_NAME: ${{ steps.get-ext-name.outputs.EXTENSION_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Get Extension Name
        id: get-ext-name
        run: |
          sudo apt-get install jq
          EXTENSION_NAME=$(jq -r .name < package.json)
          echo "Extension name: $EXTENSION_NAME"
          echo "EXTENSION_NAME=$EXTENSION_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: python -m pip install -U "jupyterlab>=4.0.0,<5"

      - name: Lint the extension
        run: |
          set -eux
          jlpm
          jlpm run lint:check

      - name: Build the extension
        run: |
          set -eux
          python -m pip install .[test]

          jupyter server extension list
          jupyter server extension list 2>&1 | grep -ie "$EXTENSION_NAME.*OK"

          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "$EXTENSION_NAME.*OK"
          python -m jupyterlab.browser_check

      - name: Package the extension
        run: |
          set -eux

          pip install build
          python -m build
          pip uninstall -y "$EXTENSION_NAME" jupyterlab

      - name: Upload extension packages
        uses: actions/upload-artifact@v4
        with:
          name: extension-artifacts
          path: dist/*
          if-no-files-found: error

  python-linting:
    uses: ASFOpenSARlab/osl-utils/.github/workflows/reusable-code-quality-python.yaml@v0.0.9
    with:
      # The osl-utils docker tag. Can also be `dev`, initials, etc. Should match the tag above in prod.
      osl-utils-tag: v0.0.9

  shell-linting:
    uses: ASFOpenSARlab/osl-utils/.github/workflows/reusable-code-quality-shell.yaml@v0.0.9
    with:
      # The osl-utils docker tag. Can also be `dev`, initials, etc. Should match the tag above in prod.
      osl-utils-tag: v0.0.9

  yaml-linting:
    uses: ASFOpenSARlab/osl-utils/.github/workflows/reusable-code-quality-yaml.yaml@v0.0.9
    with:
      # The osl-utils docker tag. Can also be `dev`, initials, etc. Should match the tag above in prod.
      osl-utils-tag: v0.0.9

  test_isolated:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'

      - uses: actions/download-artifact@v4
        with:
          name: extension-artifacts

      - name: Install and Test
        run: |
          set -eux
          # Remove NodeJS, twice to take care of system and locally installed node versions.
          sudo rm -rf $(which node)
          sudo rm -rf $(which node)

          pip install "jupyterlab>=4.0.0,<5" ${{ needs.build.outputs.EXTENSION_NAME }}*.whl

          jupyter server extension list
          jupyter server extension list 2>&1 | grep -ie "${{ needs.build.outputs.EXTENSION_NAME }}.*OK"

          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "${{ needs.build.outputs.EXTENSION_NAME }}.*OK"
          python -m jupyterlab.browser_check --no-browser-test

  check_links:
    name: Check Links
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/check-links@v1
